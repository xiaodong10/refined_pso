whole_updated_process_points=[[[82, 85], [59, 87], [70, 112], [60, 87], [65, 120], [63, 90], [67, 99], [76, 90], [61, 108], [66, 117], [64, 80], [70, 98], [75, 84]], [[82, 86], [60, 88], [71, 111], [61, 88], [66, 119], [64, 91], [68, 99], [77, 91], [62, 107], [67, 116], [65, 81], [71, 99], [76, 85]], [[82, 87], [61, 89], [72, 110], [62, 89], [67, 118], [65, 92], [69, 99], [78, 92], [63, 106], [68, 115], [66, 82], [72, 100], [77, 86]], [[82, 88], [62, 90], [73, 109], [63, 90], [68, 117], [66, 93], [70, 100], [79, 93], [64, 105], [69, 114], [67, 83], [73, 100], [78, 87]], [[82, 89], [63, 91], [74, 108], [64, 91], [69, 116], [67, 94], [71, 100], [80, 94], [65, 104], [70, 113], [68, 84], [74, 100], [79, 88]], [[82, 90], [64, 92], [75, 107], [65, 92], [70, 115], [68, 95], [72, 100], [80, 95], [66, 103], [71, 112], [69, 85], [75, 100], [80, 89]], [[82, 91], [65, 93], [76, 106], [66, 93], [71, 114], [69, 96], [73, 100], [80, 96], [67, 102], [72, 111], [70, 86], [76, 100], [81, 90]], [[82, 92], [66, 94], [77, 105], [67, 94], [72, 113], [70, 97], [74, 100], [80, 97], [68, 101], [73, 110], [71, 87], [77, 100], [81, 91]], [[82, 93], [67, 95], [78, 104], [68, 95], [73, 112], [71, 98], [75, 100], [81, 97], [69, 100], [74, 109], [72, 88], [78, 100], [81, 92]], [[82, 94], [68, 96], [79, 103], [69, 96], [74, 111], [72, 99], [76, 100], [81, 98], [70, 100], [75, 108], [73, 89], [79, 100], [81, 93]], [[82, 95], [69, 97], [80, 102], [70, 97], [75, 110], [73, 100], [77, 101], [81, 99], [71, 100], [76, 107], [74, 90], [80, 101], [81, 94]], [[82, 96], [70, 98], [81, 101], [71, 98], [76, 109], [74, 101], [78, 101], [82, 98], [72, 100], [77, 106], [75, 91], [81, 101], [81, 95]], [[82, 97], [71, 99], [82, 100], [72, 99], [77, 108], [75, 101], [79, 101], [82, 99], [73, 100], [78, 105], [76, 92], [82, 101], [81, 96]], [[82, 98], [72, 100], [82, 101], [73, 100], [78, 107], [76, 101], [80, 101], [82, 100], [74, 101], [79, 104], [77, 93], [83, 102], [81, 97]], [[82, 99], [73, 101], [83, 102], [74, 101], [79, 106], [77, 102], [81, 101], [82, 101], [75, 102], [80, 103], [78, 94], [83, 101], [81, 98]], [[82, 100], [74, 101], [83, 101], [75, 102], [80, 105], [78, 102], [82, 101], [83, 101], [76, 102], [81, 102], [78, 94], [84, 100], [82, 99]]]
whole_updated_process_points_vals=[[-79.51149081393767, -80.40264083695223, -79.40703853925996, -80.33359906445678, -81.83027046336727, -79.58504112128084, -78.39036738028906, -78.47944177380172, -79.47540002146567, -80.90576710138014, -81.85944165023002, -78.09970115651828, -80.18272734782734], [-79.15256581247607, -80.15098975238072, -79.11403641788829, -80.07775015161994, -81.48935793391809, -79.34966186043847, -78.28529863806395, -78.17951566038528, -79.27194045604381, -80.58264714069972, -81.52409247769215, -77.9622615368664, -79.81231715254366], [-78.81584026104979, -79.90537881215666, -78.82845132532007, -79.82799297769675, -81.1499938083636, -79.12267959523545, -78.17894607595022, -77.88962846454497, -79.07803708358891, -80.2629590120805, -81.19038936829057, -77.8418920538096, -79.4455130703334], [-78.50183308538199, -79.66650190477888, -78.55129040843423, -79.58504112128084, -80.8127130135247, -78.90497940724121, -78.06179973983888, -77.61114336439057, -78.89458354678945, -79.94737704734372, -80.85885703831927, -77.72981450344963, -79.08322133260663], [-78.21103487731403, -79.43510436655784, -78.28364734222274, -79.34966186043847, -80.47810342238486, -78.69751074588255, -77.95254182580882, -77.34554600994731, -78.72253328848511, -79.6366378287619, -80.5300711568953, -77.61627184561583, -78.72644465571946], [-77.94390577108348, -79.21198620806462, -78.0267086329061, -79.12267959523545, -80.14681044053361, -78.50129122770298, -77.8418920538096, -77.2104567523269, -78.56290264110226, -79.33154522627517, -80.2046626799362, -77.501225267834, -78.37629124267106], [-77.70087341068991, -78.99800546634873, -77.78176021261793, -78.90497940724121, -79.81954194405436, -78.31741053011858, -77.72981450344963, -77.09963492625397, -78.41677394057241, -79.03297577023916, -79.88332250897288, -77.38463439461952, -78.03398448842452], [-77.48233102553664, -78.7940816732794, -77.55019430240462, -78.69751074588255, -79.49707358606264, -78.14703435607328, -77.61627184561583, -77.01325631659059, -78.28529863806395, -78.74188436667947, -79.56680648997101, -77.26645720240911, -77.79777459911627], [-77.28863563106184, -78.60119942686197, -77.33351651005532, -78.50129122770298, -79.18025448755365, -77.99140844002004, -77.501225267834, -76.89152264945422, -78.169700377573, -78.45931035828659, -79.25594076582261, -77.14664992862538, -77.58539731717615], [-77.12010637036326, -78.420412048288, -77.13335311705055, -78.31741053011858, -78.87001332593468, -77.85186255882478, -77.38463439461952, -76.8279238268238, -78.06179973983888, -78.1863839295732, -78.95162749398, -77.0251669743815, -77.39718998248259], [-76.97702301188284, -78.25284530273936, -76.95145849445352, -78.14703435607328, -78.56736483142824, -77.72981450344963, -77.27784013124807, -76.78972257063731, -77.95254182580882, -77.92433284853341, -78.65485093769362, -76.91434018301904, -77.2334540379824], [-76.85962461705405, -78.09970115651828, -76.78972257063731, -77.99140844002004, -78.27341669724593, -77.6267739585767, -77.15835120550759, -76.70262872334214, -77.8418920538096, -77.67448952957731, -78.36668393530928, -76.78972257063731, -77.09445364962063], [-76.76810839044268, -77.9622615368664, -76.65017825412473, -77.85186255882478, -77.98937690382623, -77.5120092713727, -77.03720014281342, -76.66329644004537, -77.72981450344963, -77.43829839322379, -78.08829474688557, -76.66329644004537, -76.98041448321383], [-76.70262872334214, -77.8418920538096, -76.66329644004537, -77.72981450344963, -77.71656145024987, -77.39571179195649, -76.91434018301904, -76.65017825412473, -77.6267739585767, -77.2173234867645, -77.82095427078534, -76.57552297355328, -76.89152264945422], [-76.66329644004537, -77.74004563549155, -76.57552297355328, -77.6267739585767, -77.45640247691236, -77.31197214522798, -76.78972257063731, -76.66329644004537, -77.54434622765794, -77.01325631659059, -77.56604361462895, -76.5350086923429, -76.8279238268238], [-76.65017825412473, -77.6267739585767, -76.5350086923429, -77.54434622765794, -77.2104567523269, -77.19343731257052, -76.66329644004537, -76.5350086923429, -77.42892809953719, -76.8279238268238, -77.56604361462895, -76.39087871083737, -76.66329644004537]]

import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation

ani_file_name = 'C:/Users/xdwun/Research/Codes_work/AI_army/anchors_animation.gif'
fig, ax = plt.subplots(figsize=(10, 5))  # Create a single subplot

# Set limits for the axis (scatter plot and contour plot will share the same axis)
ax.set_xlim(0, 200)
ax.set_ylim(0, 200)

# Create the contour plot on the same axis (ax)
# Replace X_contour, Y_contour, and grid with the actual data for contour
X_contour, Y_contour = np.meshgrid(np.linspace(0, 200, 100), np.linspace(0, 200, 100))
grid = np.random.rand(100, 100) * 10  # Replace this with your actual grid data
levels = np.linspace(0, 10, 11)
contour = ax.contour(X_contour, Y_contour, grid, levels)

# Create an empty scatter plot (will be updated in the animation)
scatter = ax.scatter([], [], c=[], cmap='viridis')

# Update the scatter plot for each anchor update
def update(frame):
    x_points = [point[0] for point in whole_updated_process_points[frame]]
    y_points = [point[1] for point in whole_updated_process_points[frame]]
    vals = whole_updated_process_points_vals[frame]

    scatter.set_offsets(np.c_[x_points, y_points])
    scatter.set_array(np.array(vals))
    ax.set_title(f'Step {frame + 1}')

# Animation plot
ani = FuncAnimation(fig, update, frames=len(whole_updated_process_points), interval=400, blit=False)

# Save the animation as a GIF
ani.save(ani_file_name, writer='pillow')

plt.show()
